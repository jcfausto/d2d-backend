version: '3'

services:
  redis:
    image: redis:5.0-alpine
    container_name: redis-db
    ports:
      - "6379:6379"
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data
    restart: always

  mongodb:
    image: bitnami/mongodb:latest
    container_name: monbodb
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  api:
    build:
      context: .
      dockerfile: Dockerfile-api
    image: d2d/api
    container_name: d2d-api
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    environment:
      - PORT=3000
      - REDIS_URL=redis://redis
    healthcheck:
      test: curl --fail -s http://localhost:3000/api/v1/vehicles/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - redis-net
    depends_on:
      - redis

  consumers:
    build:
      context: .
      dockerfile: Dockerfile-consumers
    image: d2d/consumers
    container_name: d2d-consumers
    networks:
      - redis-net
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
      - mongodb

  streaming:
    build:
      context: .
      dockerfile: Dockerfile-streaming
    image: d2d/streaming
    container_name: d2d-streaming
    networks:
      - redis-net
    ports:
      - "9292:9292"
    volumes:
      - .:/usr/src/app
    environment:
      - PORT=9292
      - REDIS_HOST=redis-db
      - REDIS_PORT=6379
    depends_on:
      - redis

  web:
    build:
      context: ./public/frontend
      dockerfile: ../../Dockerfile-web
    image: d2d/web
    container_name: d2d-web
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
    environment:
      - PORT=3001
      - REACT_APP_LOCATION_API_URL=http://127.0.0.1:3000/api/v1/config
      - REACT_APP_STREAMING_API_URL=ws://127.0.0.1:9292
    depends_on:
      - streaming

networks:
  redis-net:
